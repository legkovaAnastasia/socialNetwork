{"version":3,"sources":["components/Dialogues/Dialogues.module.css","components/Dialogues/DialoguesItem/DialogsItem.jsx","components/Dialogues/Message/Message.jsx","components/Dialogues/AddMessagesForm/AddMessageForm.jsx","components/Dialogues/Dialogues.jsx","hoc/withAuthRedirect.js","components/Dialogues/DialoguesContainer.jsx"],"names":["module","exports","DialogueItem","props","className","s","dialogue","active","to","id","name","Message","message","maxLength150","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Dialogues","state","dialoguesPage","dialogueElements","dialogues","map","messagesElements","messages","newMessageBody","isAuth","dialoguesItems","values","sendMessage","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageBodyCreator","Component","RedirectComponent","this","React"],"mappings":"+FACAA,EAAOC,QAAU,CAAC,UAAY,6BAA6B,SAAW,4BAA4B,eAAiB,kCAAkC,OAAS,0BAA0B,SAAW,8B,sGCUpLC,EARM,SAACC,GAClB,OACI,qBAAKC,UAAWC,IAAEC,SAAW,IAAMD,IAAEE,OAArC,SACI,eAAC,IAAD,CAASC,GAAI,cAAgBL,EAAMM,GAAnC,cAAyCN,EAAMO,KAA/C,UCEGC,EANC,SAACR,GACb,OACI,qBAAKC,UAAWC,IAAEC,SAAlB,SAA6BH,EAAMS,W,4CCArCC,EAAeC,YAAiB,IAYvBC,cAAU,CAACC,KAAM,0BAAjBD,EAXQ,SAACZ,GACpB,OACA,uBAAMc,SAAUd,EAAMe,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUX,KAAK,iBAAiBY,YAAY,qBAAqBC,SAAU,CAACC,IAAUX,OAE5G,gCAAK,8CAAL,aCyBOY,EA7BG,SAACtB,GAEf,IAAIuB,EAAQvB,EAAMwB,cAEdC,EAAmBF,EAAMG,UAAUC,KAAI,SAAAxB,GAAQ,OAAI,cAAE,EAAF,CAAeI,KAAMJ,EAASI,KAAMD,GAAIH,EAASG,IAASH,EAASG,OACtHsB,EAAmBL,EAAMM,SAASF,KAAI,SAAAE,GAAQ,OAAI,cAAE,EAAF,CAAUpB,QAASoB,EAASpB,SAAcoB,EAASvB,OACpFiB,EAAMO,eAM3B,OAAK9B,EAAM+B,OAKP,sBAAK9B,UAAWC,IAAEwB,UAAlB,UACI,qBAAKzB,UAAWC,IAAE8B,eAAlB,SACKP,IAEL,qBAAKxB,UAAWC,IAAE2B,SAAlB,SACI,8BAAMD,MAEV,cAAC,EAAD,CAAgBd,SAhBJ,SAACmB,GACjBjC,EAAMkC,YAAYD,EAAOH,sBAGH,cAAC,IAAD,CAAUzB,GAAI,Y,+CCfxC8B,EAA6B,SAACZ,GAAD,MAAY,CACzCQ,OAAQR,EAAMa,KAAKL,S,QCgBRM,sBAAQC,aAbD,SAACf,GACnB,MAAO,CACHC,cAAeD,EAAMC,kBAGJ,SAACe,GACtB,MAAO,CACHL,YAAa,SAACJ,GACVS,EAASC,YAAuBV,UDRZ,SAACW,GAAe,IACtCC,EADqC,4JAEvC,WACI,OAAKC,KAAK3C,MAAM+B,OACT,cAACU,EAAD,eAAeE,KAAK3C,QADI,cAAC,IAAD,CAAUK,GAAI,eAHV,GACXuC,IAAMH,WAQtC,OAFqCH,YAAQH,EAARG,CAAoCI,KCM9DL,CACOf","file":"static/js/4.5c31e6b6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogues\":\"Dialogues_dialogues__1sXZe\",\"dialogue\":\"Dialogues_dialogue__3aSwy\",\"dialoguesItems\":\"Dialogues_dialoguesItems__EXUlX\",\"active\":\"Dialogues_active__1mmY5\",\"messages\":\"Dialogues_messages__1WYAf\"};","import { NavLink } from 'react-router-dom';\r\nimport s from './../Dialogues.module.css';\r\n\r\nconst DialogueItem = (props) => {\r\n    return (\r\n        <div className={s.dialogue + ' ' + s.active}>\r\n            <NavLink to={\"/dialogues/\" + props.id}> {props.name} </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogueItem;","import s from './../Dialogues.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.dialogue}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","import { reduxForm, Field } from 'redux-form';\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\nimport { Textarea } from '../../common/FormsControls/FormsControl';\n\nconst maxLength150 = maxLengthCreator(50);\nconst AddMessageForm = (props) => {\n    return(\n    <form onSubmit={props.handleSubmit}>\n        <div>\n            <Field component={Textarea} name='newMessageBody' placeholder='Enter your message' validate={[required, maxLength150]} />\n        </div>\n        <div><button>Add Post</button> </div>\n    </form>\n    )\n}\n\nexport default reduxForm({form: \"dialogueAddMessageForm\"}) (AddMessageForm)","import s from './Dialogues.module.css';\nimport DialogueItem from './DialoguesItem/DialogsItem';\nimport Message from './Message/Message';\nimport React from 'react';\nimport { Redirect } from 'react-router';\nimport AddMessageForm from './AddMessagesForm/AddMessageForm';\n\nconst Dialogues = (props) => {\n\n    let state = props.dialoguesPage;\n\n    let dialogueElements = state.dialogues.map(dialogue => < DialogueItem name={dialogue.name} id={dialogue.id} key={dialogue.id} />);\n    let messagesElements = state.messages.map(messages => < Message message={messages.message} key={messages.id} />);\n    let newMessageBody = state.newMessageBody;\n\n    let addNewMessage = (values) => {\n        props.sendMessage(values.newMessageBody);\n    }\n\n    if (!props.isAuth) return <Redirect to={'/login'} />\n\n\n\n    return (\n        <div className={s.dialogues}>\n            <div className={s.dialoguesItems}>\n                {dialogueElements}\n            </div>\n            <div className={s.messages}>\n                <div>{messagesElements}</div>\n            </div>\n            <AddMessageForm onSubmit={addNewMessage} />\n        </div>\n    );\n}\n\nexport default Dialogues;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n});\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to={'/login'} />\n            return <Component {...this.props} />\n        }\n    }\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n\n    return ConnectedAuthRedirectComponent;\n}","import s from './Dialogues.module.css';\nimport React from 'react';\nimport { sendMessageBodyCreator } from '../../redux/dialoguesReducer';\nimport Dialogues from './Dialogues';\nimport { connect } from 'react-redux';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\nimport { compose } from 'redux';\n\nlet mapStateToProps = (state) => {\n    return {\n        dialoguesPage: state.dialoguesPage\n    }\n}\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        sendMessage: (newMessageBody) => {\n            dispatch(sendMessageBodyCreator(newMessageBody));\n        }\n    }\n}\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect)(Dialogues);\n    //замена записи let AuthRedirectComponent = withAuthRedirect(Dialogues);\n\n    // const DialoguesContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\n    // и экспорта контейнера export default DialoguesContainer;"],"sourceRoot":""}