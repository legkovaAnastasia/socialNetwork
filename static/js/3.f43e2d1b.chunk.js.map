{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","s","post","src","message","likeCounter","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","name","component","Textarea","validate","required","MyPosts","console","log","postsElements","posts","map","postsBlock","values","addPost","newPostText","allPosts","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","descriptionBlock","photos","large","aboutMe","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","React","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.f43e2d1b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1QUCP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__Jmrn1\",\"allPosts\":\"MyPosts_allPosts__3_Oaw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post___ndL9\"};","import s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  // через дебаггер пропс андефайнд\r\n    return(\r\n    <div className={s.post}>\r\n      <img src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTE1MCPrHWjlDRZ8b9kE2GLOwllhPiahJKI6w&usqp=CAU' />\r\n      { props.message }\r\n      <div>\r\n        <span>Likes </span>\r\n        { props.likeCounter }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;","import s from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport React, { PureComponent } from 'react';\nimport { reduxForm, Field } from 'redux-form';\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\nimport { Textarea } from '../../common/FormsControls/FormsControl';\n\nconst maxLength10 = maxLengthCreator(10);\n\nlet AddNewPostForm = (props) => {\n  return     <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field name='newPostText' component={Textarea} validate={[required, maxLength10]}/>\n      </div>\n      <div>\n        <button>Add Post</button>\n      </div>\n      {/* <button>Remove</button> */}\n    </form>\n}\n\nlet AddNewPostFormRedux = reduxForm ({form: 'ProfileAddNewPostForm'}) (AddNewPostForm)\n\nconst MyPosts = (props) => {\n  console.log('Render');\n\n  let postsElements = props.posts.map(posts => <Post message={posts.message} likeCounter={posts.likeCounter} />);\n\n  let newPostElement = React.createRef();\n\n  let onAddPost = (values) => {\n    props.addPost(values.newPostText);\n  }\n\n  return (\n    <div className={s.postsBlock}>\n      <h3>posts</h3>\n      <AddNewPostFormRedux onSubmit={onAddPost} />\n      <div className={s.allPosts}>\n        {postsElements}\n      </div>\n    </div>\n  );\n}\n\nexport default MyPosts;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { addPostActionCreator } from '../../../redux/profileReducer';\nimport MyPosts from './MyPosts';\n\nconst mapStateToProps = (state) => {\n  return {\n    posts: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addPost: (newPostText) => {\n      dispatch(addPostActionCreator(newPostText))\n    }\n  }\n}\n\n\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;","import Preloader from '../../common/preloader/preloader';\nimport s from './ProfileInfo.module.css';\nimport React, { useEffect, useState } from 'react';\n\nconst ProfileStatusWithHooks = (props) => {\n\n  let [editMode, setEditMode] = useState(false);\n  let [status, setStatus] = useState(props.status);\n\n  const activateEditMode = () => {\n    setEditMode(true);\n  }\n  const deactivateEditMode = () => {\n    setEditMode(false);\n    props.updateStatus(status);\n  }\n  const onStatusChange = (e) => {\n    setStatus(e.currentTarget.value);\n  }\n\n  useEffect( () => {\n    setStatus(props.status);\n  }, [props.status]);\n  \n    return (\n      <div>\n        {!editMode &&\n          <div>\n            <span onDoubleClick={activateEditMode}>{props.status || '----'}</span>\n          </div>\n        }\n        {editMode &&\n          <div>\n            <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status} />\n          </div>\n        }\n      </div> \n    );\n  }\n\nexport default ProfileStatusWithHooks;","import Preloader from '../../common/preloader/preloader';\nimport s from './ProfileInfo.module.css';\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\n\nconst ProfileInfo = (props) => {\n  if (!props.profile) {\n    return <Preloader />\n  }\n    return(\n      <div>\n        {/* <div>\n        <img src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRisv-yQgXGrto6OxQxX62JyvyQGvRsQQ760g&usqp=CAU'/>\n        </div> */}\n        <div className={s.descriptionBlock}>\n          <img src={props.profile.photos.large} />\n          <div>{props.profile.aboutMe}</div>\n          <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} />\n        </div>\n      </div>  \n    );\n}\n\nexport default ProfileInfo;","import React from 'react';\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\nimport s from './Profile.module.css';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\n\nconst   Profile = (props) => {\n    return(\n      <div>\n        <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\n        <MyPostsContainer />\n      </div>  \n    );\n}\n\nexport default Profile;","import React from 'react';\nimport { connect } from 'react-redux';\nimport Profile from './Profile';\nimport {getUserProfile} from '../../redux/profileReducer'\nimport { Redirect, withRouter } from 'react-router';\nimport { compose } from 'redux';\nimport { getStatus, updateStatus } from '../../redux/profileReducer';\n\nclass ProfileContainer extends React.Component {\n\n  componentDidMount() {\n    let userId = this.props.match.params.userId; //из параметров, которые приходят в запросе + в app.js прописали возможные параметры в роуте\n    if (!userId) {\n      userId =  this.props.authorizedUserId;\n      if (!userId) {\n        this.props.history.push('/login');\n      }\n    }\n    this.props.getUserProfile(userId);\n    this.props.getStatus(userId);\n}\n  render() {\n    return(\n      <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus} /> \n    );\n  }\n}\nlet mapStateToProps = (state) => {\n  return { \n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth\n  }\n};\n\nexport default compose (connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\n  withRouter,\n  // withAuthRedirect\n  )\n  (ProfileContainer)\n  // замена записи \n\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\n  \n// let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent)\n\n// export default connect(mapStateToProps, {getUserProfile}) (WithUrlDataContainerComponent);"],"sourceRoot":""}